use data_database;
select * from company_data;

-- write a SQL query to calculate the total purchase amount of all orders. Return total purchase amount.
SELECT SUM(purchase_amount) AS total_purchase_amount
FROM company_data;

-- write a SQL query to calculate the average purchase amount of all orders. Return average purchase amount. 
SELECT AVG(purchase_amount) AS average_purchase_amount
FROM company_data;

-- write a SQL query that counts the number of unique salespeople. Return number of salespeople.  
select distinct(salesperson_id) as unique_salesperson_id
from company_data
order by salesperson_id;

-- write a SQL query to count the number of customers. Return number of customers.  
select count(customer_id) as num_of_cust
from company_data;

-- write a SQL query to determine the number of customers who received at least one grade for their activity.  
select customer_id, grade from company_data where grade >= 1;

-- write a SQL query to find the maximum purchase amount.
select max(purchase_amount) as max_amount
from company_data;

-- write a SQL query to find the minimum purchase amount
select min(purchase_amount) as min_amount
from company_data;

-- write a SQL query to find the highest grade of the customers in each city. Return city, maximum grade.  
select customer_city, max(grade) as max_grade
from company_data
group by customer_city
order by max_grade desc;

-- write a SQL query to find the highest purchase amount ordered by each customer. Return customer ID, maximum purchase amount. 
select customer_id , max(purchase_amount) as max_pa
from company_data
group by customer_id
order by max_pa desc;

-- write a SQL query to find the highest purchase amount ordered by each customer on a particular date. Return, order date and highest purchase amount.
select customer_id, order_date , max(purchase_amount) as max_pa
from company_data
group by order_date, customer_id
order by order_date ,max_pa desc;

-- write a SQL query to determine the highest purchase amount made by each salesperson on '2012-08-17'. Return salesperson ID, purchase amount 
select salesperson_id, max(purchase_amount) as high_pa
from company_data
where order_date = '2012-08-17'
group by salesperson_id
order by high_pa;

-- write a SQL query to find the highest order (purchase) amount by each customer on a particular order date. 
-- Filter the result by highest order (purchase) amount above 2000.00.
-- Return customer id, order date and maximum purchase amount.
select customer_id , order_date, max(purchase_amount) as high_pa
from company_data
group by customer_id, order_date
having max(purchase_amount) > 2000.00
order by customer_id, order_date desc;

-- write a SQL query to find the maximum order (purchase) amount in the range 2000 - 6000 
-- (Begin and end values are included.) by combination of each customer and order date. 
-- Return customer id, order date and maximum purchase amount.
select customer_id , order_date, max(purchase_amount) as high_pa
from company_data
group by customer_id, order_date
having max(purchase_amount) between 2000.00 and 6000.00
order by customer_id, order_date desc;

-- write a SQL query to find the maximum order (purchase) amount based on the combination of 
-- each customer and order date. Filter the rows for maximum order (purchase) amount is either 
-- 2000, 3000, 5760, 6000. Return customer id, order date and maximum purchase amount.
select customer_id, order_date, purch_amt 
from orders_table
group by customer_id , purch_amt
having purch_amt in (2000, 3000, 5760, 6000);

-- write a SQL query to determine the maximum order amount for each customer. 
-- The customer ID should be in the range 3002 and 3007(Begin and end values are included.). 
-- Return customer id and maximum purchase amount.
-- 1. Determine the maximum order amount for each customer (ID between 3002 and 3007).
SELECT customer_id, MAX(purchase_amount) AS max_purchase
FROM company_data
WHERE customer_id BETWEEN 3002 AND 3007
GROUP BY customer_id;

-- 2. Find the maximum order amount for each customer (ID between 3002 and 3007) where max purchase > 1000.
SELECT customer_id, MAX(purchase_amount) AS max_purchase
FROM company_data
WHERE customer_id BETWEEN 3002 AND 3007
GROUP BY customer_id
HAVING MAX(purchase_amount) > 1000;

-- 3. Determine the maximum order amount generated by each salesperson (ID between 5003 and 5008).
SELECT salesperson_id, MAX(purchase_amount) AS max_purchase
FROM company_data
WHERE salesperson_id BETWEEN 5003 AND 5008
GROUP BY salesperson_id;

-- 4. Count all the orders generated on '2012-08-17'.
SELECT COUNT(*) AS total_orders
FROM company_data
WHERE order_date = '2012-08-17';

-- 5. Count the number of salespeople in each city.
SELECT salesperson_city, COUNT(DISTINCT salesperson_id) AS num_salespeople
FROM company_data
GROUP BY salesperson_city;

-- 6. Count the number of orders based on each order date and salesperson.
SELECT order_date, salesperson_id, COUNT(*) AS num_orders
FROM company_data
GROUP BY order_date, salesperson_id;

-- 7. Calculate the average product price.
SELECT AVG(product_price) AS avg_product_price
FROM company_data;

-- 8. Count the number of products whose price is >= 350.
SELECT COUNT(*) AS num_products
FROM company_data
WHERE product_price >= 350;

-- 9. Compute the average product price for each company.
SELECT company_id, AVG(product_price) AS avg_price
FROM company_data
GROUP BY company_id;

-- 10. Compute the sum of the allotment amount of all departments.
SELECT SUM(allotment_amount) AS total_allotment
FROM company_data;

-- 11. Count the number of employees in each department.
SELECT department_code, COUNT(DISTINCT employee_id) AS num_employees
FROM company_data
GROUP BY department_code;

-- 12. Find the average salary for each job title.
SELECT job_title, AVG(salary) AS avg_salary
FROM company_data
GROUP BY job_title;

-- 13. List the number of employees in each department.
SELECT department_name, COUNT(DISTINCT employee_id) AS num_employees
FROM company_data
GROUP BY department_name;

-- 14. Determine the total salary expenditure by each department.
SELECT department_name, SUM(salary) AS total_salary
FROM company_data
GROUP BY department_name;

-- 15. Compute the maximum salary in each location.
SELECT location, MAX(salary) AS max_salary
FROM company_data
GROUP BY location;

-- 16. Calculate the total number of employees in each location.
SELECT location, COUNT(DISTINCT employee_id) AS num_employees
FROM company_data
GROUP BY location;

-- 17. Display the job titles of employees who work in the same department.
SELECT department_name, GROUP_CONCAT(DISTINCT job_title) AS job_titles
FROM company_data
GROUP BY department_name;

-- 18. Determine the number of employees in each job title.
SELECT job_title, COUNT(DISTINCT employee_id) AS num_employees
FROM company_data
GROUP BY job_title;

-- 19. Compute the average salary for employees in each department.
SELECT department_name, AVG(salary) AS avg_salary
FROM company_data
GROUP BY department_name;

-- 20. Find department names and locations with more than five employees.
SELECT department_name, location
FROM company_data
GROUP BY department_name, location
HAVING COUNT(DISTINCT employee_id) > 5;

-- 21. Calculate the total salary for each department and location.
SELECT department_name, location, SUM(salary) AS total_salary
FROM company_data
GROUP BY department_name, location;